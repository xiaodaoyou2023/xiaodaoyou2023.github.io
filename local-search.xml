<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>旧版本VivadoDocNav无法使用解决办法2024</title>
    <link href="/2024/12/11/%E6%97%A7%E7%89%88%E6%9C%ACVivadoDocNav%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%952024/"/>
    <url>/2024/12/11/%E6%97%A7%E7%89%88%E6%9C%ACVivadoDocNav%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%952024/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>进入Vivado下载官网</p><p><a href="https://www.xilinx.com/support/download/index.html/content/xilinx/en/downloadNav/documentation-nav.html">https://www.xilinx.com/support/download/index.html/content/xilinx/en/downloadNav/documentation-nav.html</a></p><p><img src="/image/0Dfa2e4D811dfd7f2858b54f1bbaad82b5499e68d3.png"></p><p><img src="/image/CC859561ba70f7bcc66ae643b4b172c99640c8f88a.png"></p><p>拉到最下面</p><p><img src="/image/5F1c7d66de93dad017343a4a4d8519b8934ddacca9.png"></p><p>安装好可以打开了</p><p><img src="/image/2ADc0bcC2D4fcafd1b28f746dbaa09c2e38af3eed2.png"></p>]]></content>
    
    
    <categories>
      
      <category>fpga开发</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu安装Geant4和CERNROOT</title>
    <link href="/2024/11/04/Ubuntu%E5%AE%89%E8%A3%85Geant4%E5%92%8CCERNROOT/"/>
    <url>/2024/11/04/Ubuntu%E5%AE%89%E8%A3%85Geant4%E5%92%8CCERNROOT/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p> Ubuntu中安装Geant4和Cern ROOT。</p></blockquote><h5 id="1-准备安装文件"><a href="#1-准备安装文件" class="headerlink" title="1. 准备安装文件"></a><strong>1. 准备安装文件</strong></h5><h6 id="1-1-下载root"><a href="#1-1-下载root" class="headerlink" title="1.1 下载root"></a>1.1 下载root</h6><p><a href="https://root.cern/install/all_releases" title="Releases - ROOT">Releases - ROOT</a></p><p><img src="/image/1Fa30BAD1Fc2ef40af457d1c263442fe8eb0398833.png"></p><h6 id="1-2-下载geant4"><a href="#1-2-下载geant4" class="headerlink" title="1.2 下载geant4"></a>1.2 下载geant4</h6><p><a href="https://geant4.web.cern.ch/download/all" title="Old Geant4 releases - Geant4">Old Geant4 releases - Geant4</a></p><p><img src="/image/1F8a8D4Db67db00abe7f85bdc0b04d7985ecc14641.png"></p><h6 id="1-3-将下载的文件以下面这个目录结构存放在-目录下（注意root版本与自己ubuntu版本对应）"><a href="#1-3-将下载的文件以下面这个目录结构存放在-目录下（注意root版本与自己ubuntu版本对应）" class="headerlink" title="1.3 将下载的文件以下面这个目录结构存放在~目录下（注意root版本与自己ubuntu版本对应）"></a>1.3 将下载的文件以下面这个目录结构存放在~目录下（注意root版本与自己ubuntu版本对应）</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">~<br>└─geant4androot<br>  ¦─G4ABLA.3.3.tar.gz <br>  ¦─G4EMLOW.8.5.tar.gz <br>  ¦─G4ENSDFSTATE.2.3.tar.gz <br>  ¦─G4INCL.1.2.tar.gz <br>  ¦─G4NDL.4.7.tar.gz <br>  ¦─G4PARTICLEXS.4.0.tar.gz <br>  ¦─G4PhotonEvaporation.5.7.tar.gz <br>  ¦─G4PII.1.3.tar.gz <br>  ¦─G4RadioactiveDecay.5.6.tar.gz <br>  ¦─G4RealSurface.2.2.tar.gz <br>  ¦─G4SAIDDATA.2.0.tar.gz <br>  ¦─G4TENDL.1.4.tar.gz <br>  ¦─geant4-v11.2.0.tar.gz <br>  └─root_v6.30.04.Linux-ubuntu20.04-x86_64-gcc9.4.tar.gz <br></code></pre></td></tr></table></figure><hr><h5 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h5><p>打开终端，执行以下命令（不用一条一条的复制，全部复制粘贴回车，提示输密码就输密码）</p><h6 id="2-1-安装依赖"><a href="#2-1-安装依赖" class="headerlink" title="2.1 安装依赖"></a>2.1 安装依赖</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt install curl g++ libgl1-mesa-dev cmake libx11-dev libxext-dev libxtst-dev libxrender-dev libxmu-dev libxmuu-dev libhdf5-serial-dev libtbb-dev hdf5-tools libexpat1 libexpat1-dev libxpm-dev libxft-dev libglew-dev libjpeg-dev libpng-dev libtiff-dev libgif-dev libxml2-dev libssl-dev libfftw3-dev libvdt-dev binutils build-essential -y &amp;&amp; \<br><span class="hljs-built_in">sudo</span> apt install qt5* qtbase5-dev qtbase5-dev-tools qt5-qmake qtchooser qt5-qmake-bin libqt5core5a -y<br></code></pre></td></tr></table></figure><h6 id="2-2-安装root"><a href="#2-2-安装root" class="headerlink" title="2.2 安装root"></a>2.2 安装root</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> tar -zxvf ~/geant4androot/root*.tar.gz -C /opt/ &amp;&amp; \<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;source /opt/root/bin/thisroot.sh&quot;</span> &gt;&gt; ~/.bashrc &amp;&amp; \<br><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><h6 id="2-3-安装geant4"><a href="#2-3-安装geant4" class="headerlink" title="2.3 安装geant4"></a>2.3 安装geant4</h6><p>ps:-j6换成自己电脑的核心数,先复制到记事本修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mkdir</span> -p /opt/geant4/geant4-install &amp;&amp; \<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mkdir</span> -p /opt/geant4/geant4-build &amp;&amp; \<br><span class="hljs-built_in">sudo</span> tar -zxvf ~/geant4androot/geant4*.tar.gz -C /opt/geant4/ &amp;&amp; \<br><span class="hljs-built_in">cd</span> /opt/geant4/geant4-build &amp;&amp; \<br><span class="hljs-built_in">sudo</span> cmake -DCMAKE_INSTALL_PREFIX=/opt/geant4/geant4-install -DGEANT4_USE_OPENGL_X11=ON -DGEANT4_USE_RAYTRACER_X11=ON -DGEANT4_USE_QT=ON -DGEANT4_BUILD_MULTITHREADED=ON /opt/geant4/geant4-v* &amp;&amp; \<br><span class="hljs-built_in">sudo</span> make -j6 &amp;&amp; \<br><span class="hljs-built_in">sudo</span> make install -j6 &amp;&amp; \<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;source /opt/geant4/geant4-install/bin/geant4.sh&quot;</span> &gt;&gt; ~/.bashrc &amp;&amp; \<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mkdir</span> -p /opt/geant4/geant4-install/share/Geant4/data &amp;&amp; \<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">ls</span> ~/geant4androot/G4*.tar.gz | <span class="hljs-built_in">sudo</span> xargs -n1 -I &#123;&#125; tar xzvf &#123;&#125; -C /opt/geant4/geant4-install/share/Geant4/data/ &amp;&amp; \<br><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><h6 id="2-4-复制例程创建工作目录"><a href="#2-4-复制例程创建工作目录" class="headerlink" title="2.4 复制例程创建工作目录"></a>2.4 复制例程创建工作目录</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/geant4_ws &amp;&amp; \<br><span class="hljs-built_in">cp</span> -r /opt/geant4/geant4-install/share/Geant4/examples ~/geant4_ws &amp;&amp; \<br><span class="hljs-built_in">mkdir</span> ~/root_ws &amp;&amp; \<br><span class="hljs-built_in">cp</span> -r /opt/root/tutorials ~/root_ws<br></code></pre></td></tr></table></figure><blockquote><h5 id="编译选项"><a href="#编译选项" class="headerlink" title="编译选项"></a>编译选项</h5><p>-DCMAKE_INSTALL_PREFIX用于指定安装目录（Geant4 库、头文件和支持文件的安装目录）<br>-DGEANT4_INSTALL_DATA&#x3D;ON表示在在编译 Geant4 时自动下载和安装外部数据库<br>-DGEANT4_USE_OPENGL_X11&#x3D;ON表示编译X11 OpenGL可视化驱动程序<br>-DGEANT4_USE_RAYTRACER_X11&#x3D;ON表示编译支持 X11 的 RayTracer可视化驱动程序<br>-DGEANT4_USE_QT&#x3D;ON表示编译 Qt 用户界面和可视化驱动程序<br>-DGEANT4_BUILD_MULTITHREADED&#x3D;ON表示编译支持多线程的 Geant4 库<br>-DGEANT4_INSTALL_DATADIR用于指定外部数据库目录</p></blockquote><hr><h5 id="3-验证"><a href="#3-验证" class="headerlink" title="3. 验证"></a><strong>3. 验证</strong></h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> -r ~/geant4_ws/examples/basic/B1 ~/geant4_ws &amp;&amp; \<br><span class="hljs-built_in">cd</span> ~/geant4_ws/B1 &amp;&amp; \<br><span class="hljs-built_in">mkdir</span> build &amp;&amp; \<br><span class="hljs-built_in">cd</span> build  &amp;&amp; \<br>cmake .. &amp;&amp; \<br>make &amp;&amp; \<br>./exampleB1<br></code></pre></td></tr></table></figure><p><img src="/image/B66fF5ADA93393dc56482259ceedaf0f05f6c0fb84.png"></p><hr><h5 id="4-补充"><a href="#4-补充" class="headerlink" title="4. 补充"></a>4. 补充</h5><p>安装完遇到可视化界面中不显示几何的问题，一般是显卡驱动问题，下面是安装NVIDIA显卡驱动推荐版本的命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ubuntu-drivers devices<br><span class="hljs-built_in">sudo</span> ubuntu-drivers autoinstall<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Geant4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>windows ubuntu c++ root</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>复现论文Dehamer(CVPR2022)</title>
    <link href="/2024/02/28/%E5%A4%8D%E7%8E%B0%E8%AE%BA%E6%96%87Dehamer(CVPR2022)/"/>
    <url>/2024/02/28/%E5%A4%8D%E7%8E%B0%E8%AE%BA%E6%96%87Dehamer(CVPR2022)/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p><img src="/image/c17eafebcAc54911a13240e5cd7d6c5bf787a61b4f.png">论文: <a href="https://openaccess.thecvf.com/content/CVPR2022/papers/Guo_Image_Dehazing_Transformer_With_Transmission-Aware_3D_Position_Embedding_CVPR_2022_paper.pdf">https://openaccess.thecvf.com/content/CVPR2022/papers/Guo_Image_Dehazing_Transformer_With_Transmission-Aware_3D_Position_Embedding_CVPR_2022_paper.pdf</a></p><p>github: <a href="https://github.com/Li-Chongyi/Dehamer" title="GitHub - Li-Chongyi&#x2F;Dehamer">GitHub - Li-Chongyi&#x2F;Dehamer</a></p><p>1、克隆项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~<br>git <span class="hljs-built_in">clone</span> https://github.com/Li-Chongyi/Dehamer.git<br></code></pre></td></tr></table></figure><p>2、配置虚拟环境（GTX1050内存不足无法训练，RTX4070可以训练但要CUDA版本cuda11+）</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cd</span> ~/Dehamer<br><span class="hljs-attribute">conda</span> env create -f environment.yaml<br><span class="hljs-attribute">conda</span> activate dehamer<br><span class="hljs-attribute">conda</span> install pytorch==<span class="hljs-number">1</span>.<span class="hljs-number">8</span>.<span class="hljs-number">1</span> torchvision==<span class="hljs-number">0</span>.<span class="hljs-number">9</span>.<span class="hljs-number">1</span> torchaudio==<span class="hljs-number">0</span>.<span class="hljs-number">8</span>.<span class="hljs-number">1</span> cudatoolkit=<span class="hljs-number">11</span>.<span class="hljs-number">3</span> -c pytorch -c conda-forge <br></code></pre></td></tr></table></figure><p>3、下载作者训练好的模型（提取码：1tap）</p><p><a href="https://pan.baidu.com/s/1i6A_Vjq-WUSLUJYMyYvlew">https://pan.baidu.com/s/1i6A_Vjq-WUSLUJYMyYvlew</a></p><p>放入Dehamer中（文件结构如下）</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs 1c">Dehamer<br>   <span class="hljs-string">|- ckpts</span><br>      <span class="hljs-string">|- dense</span><br>         <span class="hljs-string">|- PSNR1662_SSIM05602.pt </span><br>      <span class="hljs-string">|- NH</span><br>         <span class="hljs-string">|- PSNR2066_SSIM06844.pt</span><br>      <span class="hljs-string">|- indoor</span><br>         <span class="hljs-string">|- PSNR3663_ssim09881.pt</span><br>      <span class="hljs-string">|- outdoor</span><br>         <span class="hljs-string">|- PSNR3518_SSIM09860.pt</span><br></code></pre></td></tr></table></figure><blockquote><p>如果你想自己训练训练数据集</p><p>（0，1表示使用GPU0和GPU1，–dataset-name指定数据集名称， --train-dir和–valid-dir指定数据集训练文件路径和测试文件路径，–ckpt指定训练模型存放位置）</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">CUDA_VISIBLE_DEVICES</span>=<span class="hljs-number">0</span>,<span class="hljs-number">1</span> python src/train.py <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --dataset-name NH <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --train-dir ./data/train_NH/ <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --valid-dir ./data/valid_NH/ <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --ckpt-save-path ../ckpts <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --ckpt-overwrite <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --nb-epochs <span class="hljs-number">5000</span> <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --batch-size <span class="hljs-number">2</span><span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --train-size <span class="hljs-number">800</span> <span class="hljs-number">1200</span>  <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --valid-size <span class="hljs-number">800</span> <span class="hljs-number">1200</span> <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --loss l1 <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --plot-stats <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>  --cuda  <br></code></pre></td></tr></table></figure></blockquote><p>4、测试数据集（0代表使用GPU0，NH表示指定数据集NH）</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">CUDA_VISIBLE_DEVICES</span>=<span class="hljs-number">0</span> python src/test_PSNR.py  <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>--dataset-name NH  <br></code></pre></td></tr></table></figure><p>5、测试经典图片和自定义图片（0代表使用GPU0，mypicture表示你自己的图片路径）</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">CUDA_VISIBLE_DEVICES</span>=<span class="hljs-number">0</span> python src/test_PSNR.py  <span class="hljs-punctuation">\</span><br><span class="hljs-punctuation"></span>--dataset-name our_test -t mypicture<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pytorch 深度学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
